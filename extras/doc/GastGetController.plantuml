@startuml GastGetController

skinparam classAttributeIconSize 0

package org.springframework {
    package web.bind.annotation {
        interface "@RestController" as RestController
        interface "@RequestMapping" as RequestMapping
        interface "@PathVariable" as PathVariable
        interface "@RequestParam" as RequestParam
        interface "@ExceptionHandler" as ExceptionHandler
        interface "@ResponseStatus" as ResponseStatus
    }

    package http {
        class ResponseEntity<T>
    }
    package hateoas {
        class CollectionModel<E>
    }
    package util {
        class MultiValueMap<K,V>
    }
}

package jakarta.servlet.http {
    interface HttpServletRequest
}

package java.util {
    class UUID
    UUID .up[hidden].> HttpServletRequest
}

package com.acme.gast {
    package service {
        class GastReadService << control >> << @Service >>
        class NotFoundException
    }

    package controller #DDDDDD {
        class GastModel <<entity>>

        class GastGetController << boundary >> << @RestController >> << @RequestMapping >> {
            + @GetMapping getById(@PathVariable id: UUID, request: HttpServletRequest): GastModel
            + @GetMapping get(@RequestParam queryParams: MultiValueMap<String, String>, request: HttpServletRequest): CollectionModel<GastModel>
        }

        class CommonExceptionHandler << @ControllerAdvice >> {
            + @ExceptionHandler @ResponseStatus onNotFound(ex: NotFoundException)
        }

        GastGetController o--> "1" GastReadService : service
        GastGetController ..> GastModel

        GastGetController .up.> RestController
        GastGetController .up.> RequestMapping
        GastGetController .up.> PathVariable
        GastGetController .up.> RequestParam
        GastGetController .up.> ResponseEntity
        GastGetController .up.> MultiValueMap
        GastGetController .up.> CollectionModel
        GastGetController .right.> HttpServletRequest

        CommonExceptionHandler .up.> ExceptionHandler
        CommonExceptionHandler .up.> ResponseStatus
        CommonExceptionHandler ..> NotFoundException
        CommonExceptionHandler .up[hidden].> GastModel

        GastGetController .right.> UUID

        GastModel ..> GastReadService
    }
}

hide empty members

footer (c) Caleb Gyamfi

@enduml
